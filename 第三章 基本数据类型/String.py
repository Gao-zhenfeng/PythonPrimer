# 字符串操作
# 表示方法
# 1. 由一对单引号或双引号表示，仅表示单行字符串 eg."请输入带符号的温度值" 'C'
# 2. 由一对三单引号或者三双引号表示，可表示多行字符串 也可以当作注释
# eg. '''Python
#                   语言'''

# 索引和切片
# 索引：使用[]获取字符串中的一个或多个字符  <string>[M]
# 切片: 返回字符串中的一段子字符串 <string>[M : N]
# 1. 使用[M : N : K]根据步长对字符串切片
# -<string>[M : N], M缺失表示至开头， N缺失表示至结尾  eg. "O一二三四五"[:3] 结果为"O一二"
# -<string>[M : N : K], 根据步长对字符串切片 eg. "O一二三四五六七八九十"[1:8:2] 结果是"一三五七"
# 小技巧逆序排列： "O一二三四五六七八九十"[::-1]

# 转义字符
# \b： 回退  \n：换行，光标移动到下行首 \r: 回车，光标移动到本行首

# 字符串操作符
# x + y : 连接两个字符串
# n * x 或 x * n ： 复制n次字符串
# x in s : 如果x是s的字串，返回True, 否则返回False

weekStr = '一二三四五六日'
weekId = eval(input("请输入星期数字（1 - 7） ： "))
print("星期" + weekStr[weekId - 1])

# 字符串处理函数
# len(x) : 无论是数字，符号，汉字都是一个字符
# str(x) : 任意类型x转化为String
# hex(x) or oct(x)

# python 字符转编码 Unicode
# 同一字符编码，即覆盖似乎所有字符的编码方式
# 从0到1114111(0x10FFF)空间，每一个编码对应一个字符
# Python字符串中每个字符均为Unicode字符

# chr() : 返回当前整数对应的ASCII字符
# ord() : chr()的配对参数，传入一个字符，返回它的ASCII数值，或者Unicode数值

# end= : 决定每一个输出后是否要换行，如果为空，不做操作
for i in range(12):
    print(chr(9800 + i), end="\n")




